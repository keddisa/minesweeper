{"version":3,"sources":["contexts/index.js","containers/Main.js","utils/CellObj.js","utils/LevelsEnum.js","utils/Svgs.js","components/MineField.js","components/Cell.js","components/StatsDisplay.js","components/Level.js","components/LevelButtons.js","containers/Game.js","containers/StartView.js","containers/EndView.js","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","Main","gameStarted","useContext","CellObj","xCoordinate","yCoordinate","this","mined","clicked","flagged","missFlagged","checkedForNeighboringMines","numberOfNeighboringMines","Object","freeze","beginner","width","height","numberOfMines","intermediate","expert","mine","viewBox","style","enableBackground","fill","d","flag","crossedFlag","1","preserveAspectRatio","transform","stroke","2","className","id","3","4","version","5","6","7","8","MineField","useState","firstCellClicked","setFirstCellClicked","mineFieldArray","setMineFieldArray","setGameOver","setGameWon","resetGame","level","useEffect","buildMineFieldArray","distributeMines","numberOfMinesToDistribute","LevelsEnum","mineFieldArrayCopy","randomRow","Math","floor","random","length","randomCell","forEach","row","cell","count","y","rowArray","x","push","revealAllMines","revealNeighboringEmptyCells","checkIfWon","filter","handleNumberClick","numberOfNeighboringFlags","handleAutoClick","map","key","cellProps","Cell","cellDisplay","setCellDisplay","startLongPress","setStartLongPress","steppedOnMine","setSteppedOnMine","gameOver","setNumberOfRemainingMines","renderCell","useCallback","Svgs","toggleFlag","prevState","timerId","setTimeout","clearTimeout","onClick","onContextMenu","e","preventDefault","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","StatsDisplay","time","setTime","gameWon","numberOfRemainingMines","bestTimes","setBestTimes","setGameTime","setResetGame","interval","setInterval","clearInterval","updatedBestTimes","localStorage","setItem","JSON","stringify","Level","toUpperCase","slice","LevelButtons","setLevel","handleLevelClick","Game","StartView","setGameStarted","EndView","successMessages","failMessages","renderMessage","useMemo","App","gameTime","value","getItem","parse","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.229ec00c.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nconst GameContext = createContext()\r\n\r\nexport {\r\n    GameContext\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { Game, StartView, EndView } from './'\r\nimport { GameContext } from '../contexts'\r\n\r\nconst Main = () => {\r\n\r\n    const { gameStarted } = useContext(GameContext)\r\n\r\n    return(<div>\r\n        {!gameStarted && \r\n        <StartView />}\r\n        {gameStarted && \r\n        <>\r\n            <Game />\r\n            <EndView />\r\n        </>}\r\n    </div>)\r\n}\r\n\r\nexport default Main","class CellObj {\r\n    constructor(xCoordinate, yCoordinate) {\r\n        this.xCoordinate = xCoordinate\r\n        this.yCoordinate = yCoordinate\r\n        this.mined = false\r\n        this.clicked = false\r\n        this.flagged = false\r\n        this.missFlagged = false\r\n        this.checkedForNeighboringMines = false\r\n        this.numberOfNeighboringMines = 0   \r\n    }\r\n}\r\n\r\nexport default CellObj\r\n","export default Object.freeze({\r\n    beginner: {\r\n        width: 9,\r\n        height: 9,\r\n        numberOfMines: 10\r\n    },\r\n    intermediate: {\r\n        width: 13,\r\n        height: 16,\r\n        numberOfMines: 40\r\n    },\r\n    expert: {\r\n        width: 16,\r\n        height: 30,\r\n        numberOfMines: 99\r\n    }\r\n})","import React from 'react'\r\n\r\nexport default Object.freeze({\r\n    mine: <svg viewBox=\"-150 -150 809.696 809.696\" style={{enableBackground: \"new 0 0 509.696 509.696\"}}>\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FC495C\" d=\"M496.597,242.347l-28.843-7.595c-3.477-0.927-7.108-1.131-10.667-0.597c-3.667-28.623-13.571-56.092-29.013-80.469\r\n                    l24.661-41.813c5.717-9.643,3.413-15.275,0.512-18.261c-2.901-2.987-8.533-5.376-18.261,0l-38.229,21.76\r\n                    c-32.88-31.507-75.417-51.017-120.747-55.381l-12.544-46.848C260.395,2.304,254.933,0,250.581,0\r\n                    c-4.181,0-9.728,2.304-12.715,13.141l-12.971,47.957c-42.883,6.167-82.676,25.869-113.579,56.235L70.016,93.781\r\n                    c-9.728-5.547-15.275-3.157-18.261,0c-2.987,3.157-5.205,8.533,0.512,18.261l27.051,45.568\r\n                    c-14.144,23.444-23.16,49.619-26.453,76.8c-3.565-0.505-7.195-0.273-10.667,0.683l-28.843,7.595\r\n                    c-11.008,2.475-13.227,8.021-13.227,12.203c0,4.181,2.304,9.728,13.141,12.629l28.331,7.339c3.256,0.878,6.611,1.337,9.984,1.365\r\n                    h0.597c2.467,28.187,10.964,55.513,24.917,80.128l-24.832,41.643c-5.717,9.728-3.413,15.275-0.512,18.261\r\n                    c2.011,2.072,4.793,3.216,7.68,3.157c3.755-0.177,7.401-1.323,10.581-3.328l35.925-20.48\r\n                    c32.044,34.121,74.928,56.075,121.344,62.123l10.581,38.912c2.901,10.837,8.533,13.056,12.715,13.056s9.728-2.304,12.715-13.056\r\n                    l10.325-38.059c48.86-4.152,94.554-25.892,128.597-61.184L434.901,416c3.18,2.005,6.826,3.151,10.581,3.328\r\n                    c2.887,0.058,5.669-1.085,7.68-3.157c2.901-2.987,5.205-8.533-0.512-18.261l-22.016-37.461\r\n                    c15.393-25.686,24.705-54.555,27.221-84.395h0.597c3.308,0.013,6.605-0.388,9.813-1.195l28.16-7.424\r\n                    c10.923-2.816,13.141-8.533,13.141-12.544C509.568,250.88,507.52,245.163,496.597,242.347z M150.213,350.219\r\n                    c-0.491,0.772-1.242,1.343-2.117,1.611l0.341-0.256l-45.312,25.6l-28.501,16.64l42.667-72.363\r\n                    c0.663-1.382,1.919-2.388,3.413-2.731c1.381,0.113,2.665,0.755,3.584,1.792l24.747,24.405\r\n                    C150.824,346.056,151.352,348.429,150.213,350.219z M151.413,162.918c-0.268,0.875-0.839,1.626-1.611,2.117l-0.512-0.085\r\n                    l-24.747,24.405c-1.34,1.939-3.997,2.424-5.936,1.085c-0.72-0.497-1.269-1.203-1.574-2.023v-0.683l-42.496-71.765l34.133,19.285\r\n                    l40.192,22.869C150.892,158.743,152.034,160.89,151.413,162.918z M228.395,112.64l22.016-81.152l10.411,38.4l9.557,35.328\r\n                    l1.963,7.339c0.982,1.985,0.169,4.391-1.816,5.373c-0.785,0.389-1.676,0.509-2.536,0.344h-35.072\r\n                    c-2.175,0.418-4.278-1.006-4.696-3.181c-0.165-0.86-0.045-1.751,0.344-2.536L228.395,112.64z M272.427,397.056l-22.016,81.152\r\n                    l-8.533-30.379l-13.739-50.688c-0.982-1.985-0.169-4.391,1.816-5.373c0.785-0.389,1.676-0.509,2.536-0.344h35.328\r\n                    c2.175-0.418,4.278,1.006,4.696,3.181c0.165,0.86,0.045,1.751-0.344,2.536L272.427,397.056z M251.186,280.498\r\n                    c-0.201,0-0.403-0.002-0.604-0.007c-14.135-0.33-25.326-12.056-24.996-26.19c0.33-14.135,12.056-25.326,26.19-24.996\r\n                    c13.899,0.324,24.999,11.683,25.003,25.586C276.783,269.029,265.324,280.494,251.186,280.498z M354.278,159.563\r\n                    c0.491-0.772,1.242-1.343,2.117-1.611v0.171l7.595-4.352l66.389-37.803l-19.627,33.365l-22.955,38.997\r\n                    c-0.821,2.209-3.277,3.333-5.486,2.512c-0.82-0.305-1.526-0.854-2.023-1.574l-24.832-24.405\r\n                    C353.667,163.726,353.139,161.352,354.278,159.563z M405.035,379.307l-48.64-27.648c-2.028-0.62-3.17-2.767-2.549-4.795\r\n                    c0.268-0.875,0.839-1.626,1.611-2.117l13.397-13.056l11.52-11.264c0.919-1.037,2.203-1.679,3.584-1.792\r\n                    c1.494,0.343,2.751,1.348,3.413,2.731l3.243,5.547l39.339,66.901L405.035,379.307z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        </svg>,\r\n    flag: <svg viewBox=\"-200 -200 912 912\" style={{enableBackground:\"new 0 0 512 512\"}}>\r\n        <path fill=\"#FC495C\" d=\"M427.155,206l37.772-94.429c1.849-4.622,1.284-9.859-1.506-13.98C460.63,93.469,455.977,91,451,91\r\n            H261c-8.284,0-15,6.716-15,15v135h-35c-8.284,0-15,6.716-15,15v50c0,8.284,6.716,15,15,15h240c4.978,0,9.63-2.469,12.421-6.591\r\n            c2.791-4.121,3.355-9.358,1.506-13.98L427.155,206z\"/>\r\n        <path fill=\"#D12657\" d=\"M210.997,321c-1.932,0-3.881-0.373-5.737-1.142c-5.605-2.322-9.26-7.791-9.26-13.858v-50\r\n            c0-8.284,6.716-15,15-15h50c6.067,0,11.537,3.654,13.858,9.26c2.321,5.605,1.038,12.057-3.252,16.347l-50,50\r\n            C218.737,319.477,214.9,321,210.997,321z\"/>\r\n        <path fill=\"#FD6B82\" d=\"M261,41H61c-8.284,0-15,6.716-15,15v200c0,8.284,6.716,15,15,15h200c8.284,0,15-6.716,15-15V56\r\n            C276,47.716,269.284,41,261,41z\"/>\r\n        <path fill=\"#A4B0BE\" d=\"M61,512c-8.284,0-15-6.716-15-15V15c0-8.284,6.716-15,15-15s15,6.716,15,15v482\r\n            C76,505.284,69.284,512,61,512z\"/>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        </svg>,\r\n    crossedFlag: <svg viewBox=\"-200 -200 912 912\" style={{enableBackground:\"new 0 0 512 512\"}}>\r\n    <path fill=\"#FC495C\" d=\"M427.155,206l37.772-94.429c1.849-4.622,1.284-9.859-1.506-13.98C460.63,93.469,455.977,91,451,91\r\n        H261c-8.284,0-15,6.716-15,15v135h-35c-8.284,0-15,6.716-15,15v50c0,8.284,6.716,15,15,15h240c4.978,0,9.63-2.469,12.421-6.591\r\n        c2.791-4.121,3.355-9.358,1.506-13.98L427.155,206z\"/>\r\n    <path fill=\"#D12657\" d=\"M210.997,321c-1.932,0-3.881-0.373-5.737-1.142c-5.605-2.322-9.26-7.791-9.26-13.858v-50\r\n        c0-8.284,6.716-15,15-15h50c6.067,0,11.537,3.654,13.858,9.26c2.321,5.605,1.038,12.057-3.252,16.347l-50,50\r\n        C218.737,319.477,214.9,321,210.997,321z\"/>\r\n    <path fill=\"#FD6B82\" d=\"M261,41H61c-8.284,0-15,6.716-15,15v200c0,8.284,6.716,15,15,15h200c8.284,0,15-6.716,15-15V56\r\n        C276,47.716,269.284,41,261,41z\"/>\r\n    <path fill=\"#A4B0BE\" d=\"M61,512c-8.284,0-15-6.716-15-15V15c0-8.284,6.716-15,15-15s15,6.716,15,15v482\r\n        C76,505.284,69.284,512,61,512z\"/>\r\n    <path d=\"M284.286,256.002L506.143,34.144c7.811-7.811,7.811-20.475,0-28.285c-7.811-7.81-20.475-7.811-28.285,0L256,227.717\r\n\t\t\tL34.143,5.859c-7.811-7.811-20.475-7.811-28.285,0c-7.81,7.811-7.811,20.475,0,28.285l221.857,221.857L5.858,477.859\r\n\t\t\tc-7.811,7.811-7.811,20.475,0,28.285c3.905,3.905,9.024,5.857,14.143,5.857c5.119,0,10.237-1.952,14.143-5.857L256,284.287\r\n\t\t\tl221.857,221.857c3.905,3.905,9.024,5.857,14.143,5.857s10.237-1.952,14.143-5.857c7.811-7.811,7.811-20.475,0-28.285\r\n\t\t\tL284.286,256.002z\"/>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    </svg>,\r\n    1: <svg viewBox=\"-1200 -800 3040 2880\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#1A4CDE\" stroke=\"none\">\r\n        <path d=\"M3073 10957 l-2912 -1842 -1 -80 0 -80 371 -645 c203 -355 454 -790\r\n        556 -968 l185 -323 442 225 c376 191 1315 664 1339 674 4 2 7 -1779 7 -3957\r\n        l0 -3961 103 0 c64 0 196 13 348 35 243 34 708 100 1519 214 234 33 587 83\r\n        785 111 198 27 375 52 393 55 l32 6 0 6189 0 6190 -127 -1 -128 -1 -2912\r\n        -1841z\"/>\r\n        </g>\r\n        </svg>,\r\n    2: <svg viewBox=\"-100 -100 500 500\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,300.000000) scale(0.100000,-0.100000)\" fill=\"#0DA918\" stroke=\"none\">\r\n        <path className=\"node\" id=\"node1\" d=\"M1330 2569 c-102 -4 -182 -13 -210 -22 -25 -8 -61 -18 -80 -22 -19\r\n        -4 -44 -13 -55 -20 -11 -7 -42 -25 -70 -39 -123 -64 -244 -213 -294 -361 -24\r\n        -74 -65 -254 -59 -260 20 -21 209 -44 537 -65 85 -6 157 -13 162 -15 14 -9 39\r\n        7 39 25 0 27 30 140 44 164 21 38 79 86 115 96 67 19 100 13 137 -24 29 -29\r\n        34 -41 34 -80 0 -57 -36 -132 -88 -184 -45 -45 -176 -146 -287 -221 -352 -238\r\n        -534 -457 -624 -749 -28 -88 -51 -219 -51 -287 0 -44 33 -45 920 -47 459 -1\r\n        840 1 847 5 8 5 10 72 7 250 -2 133 -7 261 -10 285 l-5 42 -327 0 c-180 0\r\n        -337 3 -349 6 -28 8 -29 21 -3 29 11 3 26 12 32 18 25 24 94 73 118 85 27 13\r\n        115 73 140 95 8 8 42 32 75 55 125 86 233 211 274 317 12 33 27 68 32 77 5 10\r\n        9 26 9 37 0 11 5 32 11 48 16 38 13 166 -6 255 -46 224 -202 371 -495 468\r\n        -118 40 -266 51 -520 39z\"></path>\r\n        </g>\r\n        <g transform=\"translate(0.000000,300.000000) scale(0.100000,-0.100000)\" fill=\"#0DA918\" stroke=\"none\">\r\n        \r\n        </g>\r\n        </svg>,\r\n    3: <svg viewBox=\"-850 -650 2612 3380\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#DE2C1A\" stroke=\"none\">\r\n        <path d=\"M4290 12794 c-30 -2 -125 -8 -210 -14 -1022 -72 -1923 -384 -2679\r\n        -927 -471 -339 -903 -767 -1297 -1285 l-105 -138 3 -87 3 -87 1184 -793 c651\r\n        -436 1188 -793 1192 -793 5 0 53 66 108 148 128 188 211 291 337 417 283 281\r\n        615 467 968 541 165 34 437 44 576 20 348 -60 670 -280 814 -555 130 -251 137\r\n        -616 16 -878 -48 -104 -84 -156 -161 -233 -175 -174 -448 -285 -788 -320 -61\r\n        -6 -376 -10 -767 -10 l-664 0 0 -1265 0 -1265 648 0 c842 0 1091 -13 1398 -75\r\n        321 -65 576 -195 709 -363 54 -67 136 -231 159 -318 26 -96 46 -260 46 -374 0\r\n        -452 -199 -763 -625 -975 -286 -143 -595 -205 -954 -192 -482 17 -886 187\r\n        -1351 570 -147 121 -387 372 -535 559 l-139 176 -41 -36 c-23 -21 -512 -496\r\n        -1088 -1056 l-1047 -1019 0 -79 0 -80 109 -121 c481 -537 1025 -952 1656\r\n        -1263 878 -432 1881 -644 2935 -621 1148 26 2077 316 2865 895 325 239 648\r\n        560 876 872 464 633 700 1430 676 2275 -7 227 -17 333 -48 520 -93 554 -315\r\n        1034 -686 1482 -172 208 -496 502 -727 659 -47 33 -86 63 -86 68 0 5 31 41 68\r\n        80 38 40 111 124 163 187 622 749 862 1412 819 2256 -30 582 -144 1035 -377\r\n        1492 -283 556 -760 1050 -1368 1416 -521 314 -1078 495 -1761 570 -131 15\r\n        -693 28 -824 19z\"/>\r\n        </g>\r\n        </svg>,\r\n    4: <svg version=\"1.0\" viewBox=\"-900 -700 2772 2680\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\r\n        fill=\"#0A3F6D\" stroke=\"none\">\r\n        <path d=\"M3858 12637 c-36 -89 -264 -641 -506 -1227 -242 -586 -907 -2194\r\n        -1477 -3575 -1196 -2895 -1358 -3288 -1656 -4009 l-219 -529 0 -123 0 -124\r\n        2450 0 2450 0 0 -1525 0 -1525 108 0 c112 0 81 -4 1737 245 1123 169 1296 195\r\n        1301 195 2 0 4 587 4 1305 l0 1305 595 0 c327 0 595 4 595 8 0 5 108 601 240\r\n        1326 219 1200 240 1327 240 1426 l0 110 -835 0 -835 0 0 3440 0 3440 -2062 0\r\n        -2063 0 -67 -163z m1242 -5292 l0 -1425 -590 0 c-324 0 -590 3 -590 7 0 9\r\n        1173 2843 1177 2843 2 0 3 -641 3 -1425z\"/>\r\n        </g>\r\n        </svg>,\r\n    5: <svg version=\"1.0\" viewBox=\"-900 -700 2736 2780\"\r\n        preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#830B1B\" stroke=\"none\">\r\n        <path d=\"M1300 9230 l0 -3570 28 11 c86 34 780 274 902 312 593 187 1013 268\r\n        1545 297 700 39 1267 -123 1710 -490 68 -56 176 -178 233 -262 52 -76 118\r\n        -217 150 -318 100 -316 92 -752 -19 -1083 -169 -507 -614 -881 -1200 -1010\r\n        -181 -40 -290 -51 -504 -50 -359 1 -618 63 -936 224 -326 165 -600 388 -900\r\n        729 -68 77 -126 139 -130 138 -4 -2 -366 -349 -805 -773 -440 -423 -928 -894\r\n        -1085 -1045 l-287 -275 -1 -89 -1 -88 193 -192 c799 -798 1727 -1312 2802\r\n        -1555 433 -97 806 -136 1320 -136 388 1 595 14 924 61 890 126 1672 442 2346\r\n        948 355 266 750 669 991 1011 411 582 661 1251 748 2005 88 765 11 1513 -222\r\n        2155 -297 816 -863 1511 -1677 2055 -595 398 -1242 642 -1936 729 -205 26\r\n        -545 42 -664 31 -49 -5 -118 -9 -152 -9 l-63 -1 0 355 0 355 1637 2 1638 3\r\n        262 930 c144 512 339 1205 434 1540 94 336 173 613 176 618 2 4 -1675 7 -3726\r\n        7 l-3731 0 0 -3570z\"/>\r\n        </g>\r\n        </svg>,\r\n    6: <svg viewBox=\"-900 -700 2697 2680\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#008080\" stroke=\"none\">\r\n        <path d=\"M4378 12497 c-1367 -1367 -2446 -2760 -3232 -4172 -139 -250 -374\r\n        -721 -481 -965 -662 -1505 -828 -2868 -504 -4120 196 -760 573 -1415 1144\r\n        -1986 473 -473 978 -792 1587 -1002 521 -180 1085 -263 1693 -249 1162 27\r\n        2085 355 2890 1026 136 113 438 419 558 564 527 639 818 1336 914 2187 22 191\r\n        24 744 5 945 -64 648 -198 1156 -437 1653 -345 716 -868 1308 -1465 1660 -350\r\n        205 -744 350 -1150 421 -273 48 -353 55 -687 55 -212 1 -319 4 -314 11 56 73\r\n        316 396 415 515 353 424 625 720 1050 1146 486 486 773 743 1341 1199 149 120\r\n        271 220 273 224 1 3 -103 45 -230 93 -227 85 -617 230 -1045 389 -117 43 -309\r\n        115 -425 158 -428 159 -653 243 -860 320 -117 44 -305 113 -417 155 -168 63\r\n        -214 76 -262 76 l-59 0 -302 -303z m292 -6707 c365 -42 664 -235 892 -574 110\r\n        -165 178 -324 220 -519 19 -88 22 -132 22 -317 0 -186 -3 -229 -22 -320 -46\r\n        -211 -119 -384 -234 -551 -314 -460 -737 -641 -1288 -552 -269 43 -470 148\r\n        -670 352 -216 218 -346 455 -407 741 -25 119 -25 476 0 602 25 127 61 244 105\r\n        345 107 248 334 499 577 638 230 131 523 187 805 155z\"/>\r\n        </g>\r\n        </svg>,\r\n    7: <svg viewBox=\"-1000 -750 2918 2780\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#dddfd4\" stroke=\"none\">\r\n        <path d=\"M770 12795 c0 -3 -79 -308 -176 -678 -96 -370 -270 -1033 -385 -1473\r\n        l-209 -802 0 -111 0 -111 2440 0 c1498 0 2440 -4 2440 -9 0 -5 -192 -553 -426\r\n        -1218 -552 -1567 -1073 -3044 -1534 -4353 -203 -577 -536 -1521 -739 -2097\r\n        -537 -1524 -681 -1934 -681 -1939 0 -2 66 -4 148 -4 125 0 206 8 532 55 212\r\n        30 801 113 1310 185 1602 226 1821 258 1826 263 3 3 345 1066 760 2364 802\r\n        2508 775 2423 882 2758 39 121 555 1733 1146 3582 l1076 3362 0 115 0 116\r\n        -4205 0 c-2313 0 -4205 -2 -4205 -5z\"/>\r\n        </g>\r\n        </svg>,\r\n    8: <svg viewBox=\"-900 -700 2727 2680\" preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0,1280) scale(0.100000,-0.100000)\" fill=\"#8C8C8D\" stroke=\"none\">\r\n        <path d=\"M4295 12794 c-315 -23 -511 -47 -725 -90 -657 -131 -1268 -404 -1790\r\n        -799 -568 -430 -956 -928 -1185 -1519 -207 -536 -278 -1227 -180 -1746 126\r\n        -668 483 -1319 1062 -1936 68 -73 123 -134 123 -137 0 -3 -47 -39 -104 -81\r\n        -314 -229 -627 -525 -843 -797 -417 -526 -626 -1149 -650 -1934 -19 -631 98\r\n        -1186 354 -1688 323 -632 863 -1137 1621 -1516 591 -296 1246 -467 2037 -533\r\n        205 -17 897 -17 1095 0 635 55 1079 140 1550 299 662 222 1252 574 1680 1003\r\n        444 443 723 962 850 1577 122 588 101 1240 -56 1787 -201 699 -687 1330 -1444\r\n        1873 -2 2 59 68 136 146 321 325 534 618 723 994 237 474 341 972 328 1572\r\n        -13 611 -125 1088 -366 1568 -149 299 -336 549 -602 808 -567 551 -1342 918\r\n        -2259 1069 -333 55 -594 76 -985 80 -176 2 -342 2 -370 0z m605 -2784 c181\r\n        -46 395 -180 494 -309 102 -133 148 -283 148 -486 0 -144 -20 -246 -71 -370\r\n        -97 -235 -302 -446 -613 -631 -111 -66 -261 -144 -276 -144 -19 0 -204 106\r\n        -325 187 -142 94 -297 235 -376 342 -225 304 -254 716 -70 1001 50 77 176 209\r\n        253 264 116 82 268 146 399 167 96 15 343 3 437 -21z m-172 -4811 c425 -172\r\n        749 -393 947 -644 175 -223 255 -456 255 -742 0 -266 -73 -454 -248 -635 -275\r\n        -285 -699 -426 -1197 -396 -342 20 -671 161 -891 382 -135 137 -205 267 -239\r\n        451 -25 132 -16 345 20 480 47 180 164 390 301 542 106 120 315 279 534 410\r\n        94 56 370 203 383 203 5 0 65 -23 135 -51z\"/>\r\n        </g>\r\n        </svg>\r\n   \r\n})","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { Cell } from './'\r\nimport { CellObj, LevelsEnum } from '../utils'\r\nimport { GameContext } from '../contexts'\r\n\r\nconst MineField = () => {\r\n    const [firstCellClicked, setFirstCellClicked] = useState(false)\r\n    const [mineFieldArray, setMineFieldArray] = useState([])\r\n    const {setGameOver, setGameWon, resetGame, level} = useContext(GameContext)\r\n    \r\n    useEffect(()=>{\r\n        buildMineFieldArray()\r\n        setFirstCellClicked(false)\r\n    }, [resetGame])\r\n\r\n    const distributeMines = () => {\r\n        let numberOfMinesToDistribute = LevelsEnum[level].numberOfMines\r\n        const mineFieldArrayCopy = [...mineFieldArray]\r\n        while(numberOfMinesToDistribute>0) {\r\n            let randomRow = mineFieldArrayCopy[Math.floor(Math.random()*mineFieldArrayCopy.length)]\r\n            let randomCell = randomRow[Math.floor(Math.random()*randomRow.length)]\r\n            if(!randomCell.clicked && !randomCell.mined) {\r\n                randomCell.mined = true\r\n                numberOfMinesToDistribute--\r\n            }         \r\n        }\r\n        mineFieldArrayCopy.forEach(row => {\r\n            row.forEach(cell => {\r\n                if(!cell.mined) {\r\n                    let count = 0\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate]?.[cell.xCoordinate-1]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate]?.[cell.xCoordinate+1]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate-1]?.[cell.xCoordinate-1]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate-1]?.[cell.xCoordinate]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate-1]?.[cell.xCoordinate+1]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate+1]?.[cell.xCoordinate-1]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate+1]?.[cell.xCoordinate]?.mined) {count++}\r\n                    if(mineFieldArrayCopy?.[cell.yCoordinate+1]?.[cell.xCoordinate+1]?.mined) {count++}\r\n                    cell.numberOfNeighboringMines = count\r\n                }\r\n            })\r\n        })\r\n        setMineFieldArray(mineFieldArrayCopy)\r\n        setFirstCellClicked(true)\r\n    }\r\n\r\n    const buildMineFieldArray = () => {\r\n        const mineFieldArray = []\r\n        for(let y = 0; y <LevelsEnum[level].height; y++) {\r\n            let rowArray = []\r\n            for(let x = 0; x < LevelsEnum[level].width; x++){    \r\n                rowArray.push(new CellObj(x, y))\r\n                \r\n            }\r\n            mineFieldArray.push(rowArray)\r\n        }\r\n        setMineFieldArray(mineFieldArray)\r\n    }\r\n\r\n    const revealAllMines = () => {\r\n        const mineFieldArrayCopy = [...mineFieldArray]\r\n        mineFieldArrayCopy.forEach(\r\n            row => row.forEach(\r\n                cell => {\r\n                    if (cell.mined && !cell.flagged) cell.clicked = true\r\n                }\r\n        ))\r\n        setMineFieldArray(mineFieldArrayCopy)\r\n    }\r\n\r\n    const revealNeighboringEmptyCells = (x, y) => {\r\n        let mineFieldArrayCopy = [...mineFieldArray]\r\n        if(mineFieldArrayCopy?.[y]?.[x-1]) {mineFieldArrayCopy[y][x-1].clicked = true}\r\n        if(mineFieldArrayCopy?.[y]?.[x+1]) {mineFieldArrayCopy[y][x+1].clicked = true}\r\n        if(mineFieldArrayCopy?.[y-1]?.[x-1]) {mineFieldArrayCopy[y-1][x-1].clicked = true}\r\n        if(mineFieldArrayCopy?.[y-1]?.[x]) {mineFieldArrayCopy[y-1][x].clicked = true}\r\n        if(mineFieldArrayCopy?.[y-1]?.[x+1]) {mineFieldArrayCopy[y-1][x+1].clicked = true}\r\n        if(mineFieldArrayCopy?.[y+1]?.[x-1]) {mineFieldArrayCopy[y+1][x-1].clicked = true}\r\n        if(mineFieldArrayCopy?.[y+1]?.[x]) {mineFieldArrayCopy[y+1][x].clicked = true}\r\n        if(mineFieldArrayCopy?.[y+1]?.[x+1]) {mineFieldArrayCopy[y+1][x+1].clicked = true}\r\n        if(mineFieldArrayCopy?.[y]?.[x-1]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y]?.[x-1]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y][x-1].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x-1, y)\r\n        }\r\n        if(mineFieldArrayCopy?.[y]?.[x+1]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y]?.[x+1]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y][x+1].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x+1, y)\r\n        }\r\n        if(mineFieldArrayCopy?.[y-1]?.[x-1]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y-1]?.[x-1]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y-1][x-1].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x-1, y-1)\r\n        }\r\n        if(mineFieldArrayCopy?.[y-1]?.[x]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y-1]?.[x]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y-1][x].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x, y-1)\r\n        }\r\n        if(mineFieldArrayCopy?.[y-1]?.[x+1]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y-1]?.[x+1]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y-1][x+1].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x+1, y-1)\r\n        }\r\n        if(mineFieldArrayCopy?.[y+1]?.[x-1]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y+1]?.[x-1]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y+1][x-1].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x-1, y+1)\r\n        }\r\n        if(mineFieldArrayCopy?.[y+1]?.[x]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y+1]?.[x]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y+1][x].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x, y+1)\r\n        }\r\n        if(mineFieldArrayCopy?.[y+1]?.[x+1]?.numberOfNeighboringMines === 0 && !mineFieldArrayCopy?.[y+1]?.[x+1]?.checkedForNeighboringMines) {\r\n            mineFieldArrayCopy[y+1][x+1].checkedForNeighboringMines = true\r\n            revealNeighboringEmptyCells(x+1, y+1)\r\n        }\r\n\r\n        setMineFieldArray(mineFieldArrayCopy)\r\n    }\r\n\r\n    const checkIfWon = () => {\r\n        //Check if there are any cells that haven't been clicked and don't contain a mine\r\n        if (mineFieldArray.filter(row => row.filter(cell => !cell.clicked && !cell.mined).length).length === 0) {\r\n            setGameWon(true)\r\n        }\r\n    }\r\n\r\n    const handleNumberClick = (x, y) => {\r\n        let mineFieldArrayCopy = [...mineFieldArray]\r\n        //count whether number of neighboring flags is equal to number of neighboring mines\r\n        let numberOfNeighboringFlags = 0\r\n        if(mineFieldArrayCopy?.[y]?.[x-1]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y]?.[x+1]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y-1]?.[x-1]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y-1]?.[x]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y-1]?.[x+1]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y+1]?.[x-1]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y+1]?.[x]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy?.[y+1]?.[x+1]?.flagged) {numberOfNeighboringFlags++}\r\n        if(mineFieldArrayCopy[y][x].numberOfNeighboringMines === numberOfNeighboringFlags) {\r\n            if(mineFieldArrayCopy?.[y]?.[x-1]?.flagged === false) {\r\n                handleAutoClick(x-1, y, mineFieldArrayCopy)          \r\n            }\r\n            if(mineFieldArrayCopy?.[y]?.[x+1]?.flagged === false) {\r\n                handleAutoClick(x+1, y, mineFieldArrayCopy)\r\n            }\r\n            if(mineFieldArrayCopy?.[y-1]?.[x-1]?.flagged === false) {\r\n                handleAutoClick(x-1, y-1, mineFieldArrayCopy)\r\n            }\r\n            if(mineFieldArrayCopy?.[y-1]?.[x]?.flagged === false) {\r\n                handleAutoClick(x, y-1, mineFieldArrayCopy)\r\n            }\r\n            if(mineFieldArrayCopy?.[y-1]?.[x+1]?.flagged === false) {\r\n                handleAutoClick(x+1, y-1, mineFieldArrayCopy)\r\n            }\r\n            if(mineFieldArrayCopy?.[y+1]?.[x-1]?.flagged === false) {\r\n                handleAutoClick(x-1, y+1, mineFieldArrayCopy)\r\n            }\r\n            if(mineFieldArrayCopy?.[y+1]?.[x]?.flagged === false) {\r\n                handleAutoClick(x, y+1, mineFieldArrayCopy)\r\n            }\r\n            if(mineFieldArrayCopy?.[y+1]?.[x+1]?.flagged === false) {\r\n                handleAutoClick(x+1, y+1, mineFieldArrayCopy)\r\n            }\r\n        }\r\n        setMineFieldArray(mineFieldArrayCopy)\r\n        checkIfWon()\r\n    }\r\n\r\n    const handleAutoClick = (x, y, mineFieldArrayCopy) => {\r\n        mineFieldArrayCopy[y][x].clicked = true\r\n        if(mineFieldArrayCopy[y][x].mined) {\r\n            setGameOver(true)\r\n            revealAllMines()\r\n        } else if(!mineFieldArrayCopy[y][x].numberOfNeighboringMines) {\r\n            revealNeighboringEmptyCells(x, y)\r\n        }\r\n    }\r\n    \r\n    const renderMineField = () => {\r\n        return mineFieldArray.map(row => \r\n            row.map(cell => <Cell   key={`${cell.xCoordinate}${cell.yCoordinate}`} \r\n                                    cellProps={cell} \r\n                                    mineFieldArray={mineFieldArray}\r\n                                    firstCellClicked={firstCellClicked}\r\n                                    setFirstCellClicked={setFirstCellClicked}\r\n                                    distributeMines={distributeMines}\r\n                                    revealAllMines={revealAllMines}\r\n                                    revealNeighboringEmptyCells={revealNeighboringEmptyCells}\r\n                                    checkIfWon={checkIfWon}\r\n                                    handleNumberClick={handleNumberClick}/>))\r\n    }\r\n\r\n    const renderClassName = () => {\r\n        if(level === 'beginner') {\r\n            return \"mine-field-beginner\"\r\n        } else if(level === 'intermediate') {\r\n            return \"mine-field-intermediate\"\r\n        } else if(level === 'expert') {\r\n            return \"mine-field-expert\"\r\n        }\r\n    }\r\n\r\n    return(<div className={renderClassName()}>\r\n         {renderMineField()}\r\n        </div>)\r\n}\r\n\r\nexport default MineField","import React, {useState, useEffect, useCallback, useContext} from 'react'\r\n\r\nimport {Svgs} from '../utils'\r\nimport {GameContext} from '../contexts'\r\n\r\nconst Cell = ({ cellProps,\r\n                firstCellClicked,\r\n                distributeMines,\r\n                revealAllMines,\r\n                revealNeighboringEmptyCells,\r\n                handleNumberClick,\r\n                checkIfWon}) => {\r\n\r\n    const [cellDisplay, setCellDisplay] = useState(null)\r\n    const [startLongPress, setStartLongPress] = useState(false)\r\n    const [steppedOnMine, setSteppedOnMine] = useState(false)\r\n\r\n    const {gameOver, setGameOver, setNumberOfRemainingMines, resetGame} = useContext(GameContext)\r\n\r\n    const renderCell = useCallback(() => {\r\n        if(!cellProps.clicked && !cellProps.flagged) {setCellDisplay(null)}\r\n        else if(cellProps.clicked && cellProps.mined && !cellProps.flagged) {setCellDisplay(Svgs.mine)}\r\n        else if(cellProps.missFlagged && gameOver) {setCellDisplay(Svgs.crossedFlag)}\r\n        else if(cellProps.flagged) {setCellDisplay(Svgs.flag)}\r\n        else if(cellProps.clicked && !cellProps.mined) {setCellDisplay(Svgs[cellProps.numberOfNeighboringMines])}\r\n    },[cellProps.clicked, cellProps.mined, cellProps.numberOfNeighboringMines, cellProps.flagged, cellProps.missFlagged, gameOver])\r\n\r\n    useEffect(()=>{\r\n        setSteppedOnMine(false)\r\n    }, [resetGame])\r\n\r\n    useEffect(()=> {\r\n        renderCell()\r\n    }, [cellProps.clicked, renderCell])\r\n\r\n    const toggleFlag = useCallback(() => {\r\n        if(!cellProps.clicked) {\r\n            if(!cellProps.flagged) {\r\n                cellProps.flagged = true\r\n                setNumberOfRemainingMines(prevState => prevState-1)\r\n                cellProps.missFlagged = !cellProps.mined\r\n            } else {\r\n                cellProps.flagged = false\r\n                setNumberOfRemainingMines(prevState => prevState+1)\r\n            }\r\n            renderCell()\r\n        }\r\n    }, [cellProps.flagged, cellProps.missFlagged, cellProps.mined, cellProps.clicked, renderCell, setNumberOfRemainingMines])\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n        if (startLongPress) {\r\n          timerId = setTimeout(toggleFlag, 1000);\r\n        } else {\r\n          clearTimeout(timerId);\r\n        }\r\n    \r\n        return () => {\r\n          clearTimeout(timerId);\r\n        };\r\n      }, [startLongPress, cellProps.clicked, cellProps.flagged, toggleFlag]);\r\n\r\n    const handleCellClick = () => {\r\n        if(!gameOver && !cellProps.flagged) {\r\n           cellProps.clicked = true;\r\n            if(!firstCellClicked) {\r\n                distributeMines()\r\n            }\r\n            renderCell()\r\n            if(cellProps.mined) {\r\n                setGameOver(true)\r\n                setSteppedOnMine(true)\r\n                revealAllMines()\r\n            } else if(!cellProps.numberOfNeighboringMines) {\r\n                revealNeighboringEmptyCells(cellProps.xCoordinate, cellProps.yCoordinate)\r\n            } else {\r\n                handleNumberClick(cellProps.xCoordinate, cellProps.yCoordinate)\r\n            }\r\n            checkIfWon()\r\n        }   \r\n    }\r\n\r\n    const handleRightClick = (e) => {\r\n        e.preventDefault()\r\n        toggleFlag() \r\n    }\r\n\r\n    return(<div className={`cell ${cellProps.clicked ? '' : 'cell-unclicked'} ${steppedOnMine ? 'oops-mine' : ''}`}    \r\n                                    onClick={handleCellClick}\r\n                                    onContextMenu={handleRightClick}\r\n                                    onMouseDown={() => setStartLongPress(true)}\r\n                                    onMouseUp={() => setStartLongPress(false)}\r\n                                    onMouseLeave={() => setStartLongPress(false)}\r\n                                    onTouchStart={() => setStartLongPress(true)}\r\n                                    onTouchEnd={() => setStartLongPress(false)} \r\n                                    >\r\n        {cellDisplay}\r\n    </div>)\r\n}\r\n\r\nexport default Cell","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {GameContext} from '../contexts';\r\n\r\nconst StatsDisplay = () => {\r\n    const [time, setTime] = useState(0)\r\n    const {gameWon, gameOver, numberOfRemainingMines, level, bestTimes, setBestTimes, setGameTime, resetGame, setResetGame} = useContext(GameContext)\r\n    \r\n    useEffect(()=>{\r\n        setTime(0)\r\n        setGameTime(0)\r\n        setResetGame(false)\r\n    }, [resetGame])\r\n\r\n    useEffect(()=>{\r\n        let interval\r\n        if(!gameOver || !gameWon) {\r\n            interval = setInterval(()=>{\r\n            if(gameOver || gameWon) {\r\n                clearInterval(interval)\r\n                setGameTime(time)\r\n                if(gameWon) {\r\n                    if(time < bestTimes[level]) {\r\n                        const updatedBestTimes = {...bestTimes, [level]: time}\r\n                        setBestTimes(updatedBestTimes)\r\n                        localStorage.setItem('mineSweeperScores', JSON.stringify(updatedBestTimes))\r\n                    }  \r\n                }\r\n            }\r\n            setTime(prevState => prevState + 1)  \r\n        }, 1000)\r\n        }   \r\n        return () => {if(interval) clearInterval(interval)}\r\n    }, [gameOver, gameWon])\r\n\r\n\r\n    return(<div className=\"stats-display\">\r\n        <div></div>\r\n        <div>\r\n            <div>Time</div>\r\n            <div>{time}</div>\r\n        </div>\r\n        <div>\r\n            <div>Remaining mines</div>\r\n            <div>{numberOfRemainingMines}</div>\r\n        </div>\r\n        <div>\r\n            <div>Best Time</div>\r\n            <div>{bestTimes[level]===999? 'NA': `${bestTimes[level]} seconds`}</div>\r\n        </div>\r\n        <div></div>\r\n    </div>)\r\n}\r\n\r\nexport default StatsDisplay","import React, {useContext} from 'react'\r\n\r\nimport { GameContext } from '../contexts'\r\n\r\nconst Level = () => {\r\n    const {level} = useContext(GameContext)\r\n\r\n    return(<div className=\"title-text\">\r\n        Level: {level[0].toUpperCase() + level.slice(1)}\r\n    </div>)\r\n}\r\n\r\nexport default Level","import React, { useContext } from 'react'\r\n\r\nimport { GameContext } from '../contexts'\r\nimport { LevelsEnum } from '../utils'\r\n\r\nconst LevelButtons = () => {\r\n\r\n    const {setLevel, setResetGame, setGameOver, setGameWon, setNumberOfRemainingMines} = useContext(GameContext)\r\n\r\n    const handleLevelClick = (level) => {\r\n        setLevel(level)\r\n        setNumberOfRemainingMines(LevelsEnum[level].numberOfMines)\r\n        setResetGame(true)\r\n        setGameOver(false)\r\n        setGameWon(false)\r\n    }\r\n\r\n    return(<div className=\"level-buttons\">\r\n        <button className=\"button-main\" onClick={() => handleLevelClick('beginner')}>Beginner</button>\r\n        <button className=\"button-main\" onClick={() => handleLevelClick('intermediate')}>Intermediate</button>\r\n        <button className=\"button-main\" onClick={() => handleLevelClick('expert')}>Expert</button>\r\n    </div>)\r\n}\r\n\r\nexport default LevelButtons","import React, { useContext } from 'react'\r\n\r\nimport { MineField, StatsDisplay, Level, LevelButtons } from '../components'\r\n\r\nimport { GameContext } from '../contexts'\r\n\r\nconst Game = () => {\r\n\r\n    const { setGameOver, setGameWon, setResetGame } = useContext(GameContext)\r\n\r\n    const handleReplayClick = () => {\r\n        setResetGame(true)\r\n        setGameOver(false)\r\n        setGameWon(false)\r\n    }\r\n\r\n    return(<div className=\"game\">\r\n        <Level />\r\n        <button className=\"button-main\" onClick={handleReplayClick}>Replay</button>\r\n        <StatsDisplay />\r\n        <MineField />\r\n        <LevelButtons />\r\n    </div>)\r\n}\r\n\r\nexport default Game","import React, { useContext } from 'react'\r\n\r\nimport { GameContext } from '../contexts'\r\n\r\nconst StartView = () => {\r\n    const { bestTimes, setGameStarted } = useContext(GameContext)\r\n\r\n    return(<div className=\"start-view\">\r\n        <div className=\"title-text\">Minesweeper game</div>\r\n        <div className=\"secondary-title-text\">Top times</div>\r\n        <div className=\"text-main start-view-times\">\r\n            <div>{`Beginner: ${bestTimes.beginner === 999 ? \"(Haven't cracked that one yet)\" : `${bestTimes.beginner} seconds`}`}</div>\r\n            <div>{`Intermediate: ${bestTimes.intermediate === 999 ? \"(Haven't cracked that one yet)\" : `${bestTimes.intermediate} seconds`}`}</div>\r\n            <div>{`Expert: ${bestTimes.expert === 999 ? \"(Haven't cracked that one yet)\" : `${bestTimes.expert} seconds`}`}</div>\r\n        </div>\r\n        <button className=\"button-main\" onClick={() => setGameStarted(true)}>Start Game</button>\r\n    </div>)\r\n}\r\n\r\nexport default StartView","import React, { useContext, useMemo } from 'react'\r\n\r\nimport { GameContext } from '../contexts'\r\n\r\nconst EndView = () => {\r\n    const { gameWon, gameOver } = useContext(GameContext)\r\n\r\n    const successMessages = [\"Well done!\", \"Awesome job!\", \"You killed it!\", \"Nice Work!\", \"Sweet! Good job..\", \"Great work!\"]\r\n    const failMessages = [\"Oops! Next time..\", \"Auch!!\", \"Good run. Better luck next time :)\", \"Ah well.. Good effort though\"]\r\n\r\n    const renderMessage = useMemo(()=>{\r\n        \r\n        if(gameWon) \r\n            return <>\r\n                <div className=\"title-text\">{successMessages[Math.floor(Math.random()*successMessages.length)]}</div>\r\n            </>\r\n        if(gameOver) \r\n        return <>\r\n            <div className=\"title-text\">{failMessages[Math.floor(Math.random()*failMessages.length)]}</div>\r\n        </> \r\n    }, [gameWon, gameOver])\r\n\r\n    return(<div className=\"end-view\">\r\n        {renderMessage}  \r\n    </div>)\r\n}\r\n\r\nexport default EndView","import React, {useState, useEffect} from 'react'\n\nimport './App.css'\nimport {Main} from './containers'\nimport {GameContext} from './contexts'\nimport {LevelsEnum} from './utils'\n\nconst App = () => {\n  const [gameOver, setGameOver] = useState(false)\n  const [gameWon, setGameWon] = useState(false)\n  const [gameStarted, setGameStarted] = useState(false)\n  const [level, setLevel] = useState('beginner')\n  const [numberOfRemainingMines, setNumberOfRemainingMines] = useState(LevelsEnum[level].numberOfMines)\n  const [bestTimes, setBestTimes] = useState({beginner: 999, intermediate: 999, expert: 999})\n  const [gameTime, setGameTime] = useState(0)\n  const [resetGame, setResetGame] = useState(false)\n\n  const value = {\n    gameOver,\n    setGameOver,\n    gameWon,\n    setGameWon,\n    gameStarted,\n    setGameStarted,\n    level,\n    setLevel,\n    numberOfRemainingMines,\n    setNumberOfRemainingMines,\n    bestTimes,\n    setBestTimes,\n    gameTime,\n    setGameTime,\n    resetGame,\n    setResetGame\n  }\n\n  useEffect(()=>{\n    const bestTimes = localStorage.getItem('mineSweeperScores')\n    if(bestTimes) {\n      setBestTimes(JSON.parse(bestTimes))\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <GameContext.Provider value={value}>\n        <Main />\n      </GameContext.Provider>     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}